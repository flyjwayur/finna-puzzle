{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name puzzle.game, :imports nil, :requires {phzr.core phzr.core, phzr.game-object-factory phzr.game-object-factory, p phzr.core, pgof phzr.game-object-factory, pg phzr.game, phzr.loader phzr.loader, phzr.game phzr.game, ptwn phzr.tween, pl phzr.loader, phzr.tween phzr.tween, ppo phzr.point, phzr.point phzr.point, psg phzr.signal, phzr.signal phzr.signal}, :uses {pset! phzr.core}, :defs {build-states {:name puzzle.game/build-states, :file "src/puzzle/game.cljs", :line 107, :column 1, :end-line 107, :end-column 18, :meta {:file "/home/soo/AMP-project/finna/src/puzzle/game.cljs", :line 107, :column 6, :end-line 107, :end-column 18}}, sprite-on-click {:protocol-inline nil, :meta {:file "/home/soo/AMP-project/finna/src/puzzle/game.cljs", :line 58, :column 8, :end-line 58, :end-column 23, :private true, :arglists (quote ([piece event game]))}, :private true, :name puzzle.game/sprite-on-click, :variadic false, :file "src/puzzle/game.cljs", :end-column 23, :method-params ([piece event game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 3, :fn-var true, :arglists (quote ([piece event game]))}, get-image-size-and-start-game {:protocol-inline nil, :meta {:file "/home/soo/AMP-project/finna/src/puzzle/game.cljs", :line 118, :column 8, :end-line 118, :end-column 37, :private true, :arglists (quote ([url]))}, :private true, :name puzzle.game/get-image-size-and-start-game, :variadic false, :file "src/puzzle/game.cljs", :end-column 37, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url]))}, create {:protocol-inline nil, :meta {:file "/home/soo/AMP-project/finna/src/puzzle/game.cljs", :line 104, :column 8, :end-line 104, :end-column 14, :private true, :arglists (quote ([game]))}, :private true, :name puzzle.game/create, :variadic false, :file "src/puzzle/game.cljs", :end-column 14, :method-params ([game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 1, :fn-var true, :arglists (quote ([game]))}, display-success-text {:protocol-inline nil, :meta {:file "/home/soo/AMP-project/finna/src/puzzle/game.cljs", :line 33, :column 8, :end-line 33, :end-column 28, :private true, :arglists (quote ([game]))}, :private true, :name puzzle.game/display-success-text, :variadic false, :file "src/puzzle/game.cljs", :end-column 28, :method-params ([game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([game]))}, create-puzzle-piece! {:protocol-inline nil, :meta {:file "/home/soo/AMP-project/finna/src/puzzle/game.cljs", :line 78, :column 8, :end-line 78, :end-column 28, :private true, :arglists (quote ([game col row sprite-key frame-number]))}, :private true, :name puzzle.game/create-puzzle-piece!, :variadic false, :file "src/puzzle/game.cljs", :end-column 28, :method-params ([game col row sprite-key frame-number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 5, :fn-var true, :arglists (quote ([game col row sprite-key frame-number]))}, start-puzzle {:protocol-inline nil, :meta {:file "/home/soo/AMP-project/finna/src/puzzle/game.cljs", :line 134, :column 7, :end-line 134, :end-column 19, :arglists (quote ([puzzle-image]))}, :name puzzle.game/start-puzzle, :variadic false, :file "src/puzzle/game.cljs", :end-column 19, :method-params ([puzzle-image]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([puzzle-image]))}, game-state {:name puzzle.game/game-state, :file "src/puzzle/game.cljs", :line 13, :column 1, :end-line 13, :end-column 20, :meta {:file "/home/soo/AMP-project/finna/src/puzzle/game.cljs", :line 13, :column 10, :end-line 13, :end-column 20}}, solved? {:protocol-inline nil, :meta {:file "/home/soo/AMP-project/finna/src/puzzle/game.cljs", :line 45, :column 8, :end-line 45, :end-column 15, :private true, :arglists (quote ([]))}, :private true, :name puzzle.game/solved?, :variadic false, :file "src/puzzle/game.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, start-game {:protocol-inline nil, :meta {:file "/home/soo/AMP-project/finna/src/puzzle/game.cljs", :line 111, :column 8, :end-line 111, :end-column 18, :private true, :arglists (quote ([]))}, :private true, :name puzzle.game/start-game, :variadic false, :file "src/puzzle/game.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, can-move {:protocol-inline nil, :meta {:file "/home/soo/AMP-project/finna/src/puzzle/game.cljs", :line 52, :column 8, :end-line 52, :end-column 16, :private true, :arglists (quote ([black-coord piece-coord]))}, :private true, :name puzzle.game/can-move, :variadic false, :file "src/puzzle/game.cljs", :end-column 16, :method-params ([black-coord piece-coord]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 2, :fn-var true, :arglists (quote ([black-coord piece-coord]))}, preload {:protocol-inline nil, :meta {:file "/home/soo/AMP-project/finna/src/puzzle/game.cljs", :line 27, :column 17, :end-line 27, :end-column 24, :private true, :arglists (quote ([game]))}, :private true, :name puzzle.game/preload, :variadic false, :file "src/puzzle/game.cljs", :end-column 24, :method-params ([game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([game]))}, init-board! {:protocol-inline nil, :meta {:file "/home/soo/AMP-project/finna/src/puzzle/game.cljs", :line 90, :column 17, :end-line 90, :end-column 28, :private true, :arglists (quote ([game])), :doc "Create randomized puzzle board with one black piece"}, :private true, :name puzzle.game/init-board!, :variadic false, :file "src/puzzle/game.cljs", :end-column 28, :method-params ([game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 1, :fn-var true, :arglists (quote ([game])), :doc "Create randomized puzzle board with one black piece"}, create-black-piece! {:protocol-inline nil, :meta {:file "/home/soo/AMP-project/finna/src/puzzle/game.cljs", :line 72, :column 8, :end-line 72, :end-column 27, :private true, :arglists (quote ([gof col row]))}, :private true, :name puzzle.game/create-black-piece!, :variadic false, :file "src/puzzle/game.cljs", :end-column 27, :method-params ([gof col row]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 3, :fn-var true, :arglists (quote ([gof col row]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y :load :puzzle-image :align :board-cols :center-y :piece-coords :create :name :events :fill :canvas :font :on-input-down :center-x :world :input-enabled :preload :game-div-id :board-rows :black-coord :x :piece-width :anchor :add :world-height :world-width :piece-height :text}, :order [:puzzle-image :board-cols :piece-coords :game-div-id :board-rows :black-coord :piece-width :world-height :world-width :piece-height :text :load :font :fill :align :add :world :center-x :center-y :anchor :name :x :y :input-enabled :events :on-input-down :preload :create :canvas]}, :doc nil}